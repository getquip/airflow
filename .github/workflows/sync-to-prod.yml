name: Deploy on Merge to Production

on:
  pull_request:
    types:
      - closed # Triggers when a pull request is closed (merged or rejected)
    branches:
      - main # Only trigger for PRs merged to main
      
  workflow_dispatch: 


env:
  AIRFLOW_PROD_BUCKET: "gs://${{ secrets.AIRFLOW_PROD_BUCKET }}"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Only proceed if the PR was merged
    - name: Check if PR was merged
      if: github.event.pull_request.merged == true
      run: echo "PR was merged, proceeding with deployment."

    # Check if it's a manual trigger (workflow_dispatch)
    - name: Check if manual trigger
      if: github.event_name == 'workflow_dispatch'
      run: echo "Workflow triggered manually, proceeding with manual deployment steps."

    # Only proceed with these steps if it's a PR merge or workflow_dispatch
    - name: Set up Google Cloud SDK
      if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
      uses: 'google-github-actions/auth@v2'
      with:
        project_id: ${{ secrets.GCP_PROD_PROJECT_ID }} 
        credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

    - name: Push dags/ to GCS
      if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
      run: |
            gcloud storage rsync dags/ $AIRFLOW_PROD_BUCKET/dags \
            --recursive \
            --exclude=".DS_Store" \
            --delete-unmatched-destination-objects
            
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ always() && (needs.deploy.result == 'failure' || needs.deploy.result == 'timed_out') }}
    needs:
      - deploy
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_USERNAME: GHA
        SLACK_TITLE: Workflow ${{ needs.deploy.result }}
        MSG_MINIMAL: actions url
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

